Exited with status 1 while running your code.
Read our docs for common ways to troubleshoot your deploy.

All logs
Search
Search

Live tail
EDT

Menu
==> Cloning from https://github.com/rbtech24/hillcountryplaces
==> Checking out commit 04ea636851f678b3fd32858ab4ce290c706b8190 in branch main
==> Using Node.js version 22.14.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install; npm run build'...
added 588 packages, and audited 589 packages in 19s
72 packages are looking for funding
  run `npm fund` for details
7 moderate severity vulnerabilities
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.14 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 7 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 2785 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                     3.46 kB â”‚ gzip:   1.27 kB
../dist/public/assets/index-BTcM4W7b.css    120.83 kB â”‚ gzip:  23.37 kB
../dist/public/assets/index-CQ32wmVS.js   1,118.25 kB â”‚ gzip: 321.40 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 11.19s
  dist/index.js  79.4kb
âš¡ Done in 13ms
==> Uploading build...
==> Uploaded in 8.1s. Compression took 6.1s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
SendGrid API key not found. Email functionality will be limited.
file:///opt/render/project/src/node_modules/openai/index.mjs:47
            throw new Errors.OpenAIError("The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).");
                  ^
OpenAIError: The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).
    at new OpenAI (file:///opt/render/project/src/node_modules/openai/index.mjs:47:19)
    at file:///opt/render/project/src/dist/index.js:970:14
    at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
Node.js v22.14.0
==> Exited with status 1
==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
SendGrid API key not found. Email functionality will be limited.
file:///opt/render/project/src/node_modules/openai/index.mjs:47
            throw new Errors.OpenAIError("The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).");
                  ^
OpenAIError: The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).
    at new OpenAI (file:///opt/render/project/src/node_modules/openai/index.mjs:47:19)
    at file:///opt/render/project/src/dist/index.js:970:14
    at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
Node.js v22.14.0